// if you create new CSS file, treat it as a partial, add “_” before the name,
//for example “_card.scss” and import it in the main.scss with the following syntax: @import ‘card’;
// to compile scss to css run in the console: npm run scss:build
// or npm run scss:watch if you want to watch changes in the scss files during the development
// You should be in the same folder as package_json file
// OR WRITE YOUR CSS IN THIS MAIN FILE
//@import "_icons.scss";

:root {
  --bg-color: #1e2638;
  --blue-light: #127681;
  --gold: #f3c623;
  --white: #f4f6ff;
}

html,
body {
  height: 100%;
}
html {
  display: table;
  width: 100%;
  font-size: calc(1rem + 1vw);
}
body {
  display: table-cell;
  text-align: center;
  vertical-align: middle;
}

body {
  margin: 0 auto;
  padding: 0;
  background-color: var(--bg-color);
}

h1,
p {
  font-family: "Montserrat", sans-serif;
  color: var(--white);
  margin: auto;
  font-size: 3rem;
}

.head {
  font-size: 4.5rem;
}

.game-instruction {
  width: 80%;
  background: var(--blue-light);
  border: 1px solid var(--white);
  box-sizing: border-box;
  box-shadow: 10px 7px 4px rgba(0, 0, 0, 0.25);
  border-radius: 50px;
  margin: 2%;
}

.game-instruction p {
  font-size: 1rem;
  font-weight: 800;
  padding: 5%;
}

.gameHead {
  font-size: 2.5rem;
  padding-top: 1rem;
}
.area {
  display: flex;
  flex-direction: column;
}
.firstRow {
  justify-content: center;
}

.secondRow {
  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
}

.thirdRow {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

.game-card {
  border-radius: 50%;
  background-color: var(--blue-light);
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr 1fr;
}

.container-flex {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.buttons {
  display: flex;
  flex-wrap: wrap;
  width: 80%;
}

.btn {
  margin: auto;
  background: #127681;
  border-radius: 50px;
  border: 1px solid var(--white);
  cursor: pointer;
  transition: box-shadow 0.05s ease-in-out;
  text-decoration: none;
}
.start {
  width: 70vw;
}
.score {
  font-size: 2rem;
  padding: 0.4rem;
}

.play {
  font-size: 2rem;
  padding: 0.4rem;
}

.wrap {
  margin-bottom: 2%;
}

.btn:active {
  box-shadow: inset 7px 10px 4px rgba(0, 0, 0, 0.25);
}

.small {
  padding: 0.4rem;
  font-size: 2rem;
}

.score-display {
  background: #127681;
  border-radius: 50px;
  font-weight: bold;
  color: var(--gold);
  text-align: center;
  font-size: 2rem;
  padding: 1rem;
  margin: 1rem;
}

.game-tab {
  display: flex;
  justify-content: space-between;
}

/* secendary styles */
.pr-gold {
  color: var(--gold);
}

.correct {
  scale: 1.2;
  color: green !important;
}

.inCorrect {
  color: red !important;
}

#icon0 {
  align-self: center;
  justify-self: center;
  cursor: pointer;
  grid-column-start: 1;
  grid-column-end: 1;
  grid-row-start: 2;
  grid-row-end: 2;
  i {
    transform: rotate(random(359) + deg) scale(random(2) / 2.2);
    display: inline-block;
  }
}

#icon1 {
  align-self: center;
  justify-self: center;
  cursor: pointer;
  grid-column-start: 1;
  grid-column-end: 1;
  grid-row-start: 3;
  grid-row-end: 3;
  i {
    transform: rotate(random(359) + deg) scale(random(2) / 2.2);
    display: inline-block;
  }
}

#icon2 {
  align-self: center;
  justify-self: center;
  grid-column-start: 2;
  grid-column-end: 2;
  grid-row-start: 1;
  grid-row-end: 1;
  i {
    transform: rotate(random(359) + deg) scale(random(2) / 2.2);
    display: inline-block;
  }
}

#icon3 {
  align-self: center;
  justify-self: center;
  cursor: pointer;
  grid-column-start: 2;
  grid-column-end: 2;
  grid-row-start: 2;
  grid-row-end: 2;
  i {
    transform: rotate(random(359) + deg) scale(random(2) / 2.2);
    display: inline-block;
  }
}

#icon4 {
  align-self: center;
  justify-self: center;
  cursor: pointer;
  grid-column-start: 2;
  grid-column-end: 2;
  grid-row-start: 3;
  grid-row-end: 3;
  i {
    transform: rotate(random(359) + deg) scale(random(2) / 2.2);
    display: inline-block;
  }
}

#icon5 {
  align-self: center;
  justify-self: center;
  cursor: pointer;
  grid-column-start: 2;
  grid-column-end: 2;
  grid-row-start: 4;
  grid-row-end: 4;
  i {
    transform: rotate(random(359) + deg) scale(random(2) / 2.2);
    display: inline-block;
  }
}

#icon6 {
  align-self: center;
  justify-self: center;
  cursor: pointer;
  grid-column-start: 3;
  grid-column-end: 3;
  grid-row-start: 2;
  grid-row-end: 2;
  i {
    transform: rotate(random(359) + deg) scale(random(2) / 2.2);
    display: inline-block;
  }
}

#icon7 {
  align-self: center;
  justify-self: center;
  cursor: pointer;
  grid-column-start: 3;
  grid-column-end: 3;
  grid-row-start: 3;
  grid-row-end: 3;
  i {
    transform: rotate(random(359) + deg) scale(random(2) / 2.2);
    display: inline-block;
  }
}

@media (max-width: 1500px) {
  .game-card {
    width: 400px;
    height: 400px;
  }
  .first {
    margin-top: -2rem;
  }
  .gameHead {
    margin-left: 5rem;
  }
  #icon0,
  #icon1,
  #icon2,
  #icon3,
  #icon4,
  #icon5,
  #icon6,
  #icon7 {
    font-size: 3rem;
  }
}

@media (max-width: 800px) {
  .game-card {
    width: 300px;
    height: 300px;
  }
  .gameHead {
    margin-left: 5rem;
  }
  .first {
    margin-top: -2rem;
  }
  #icon0,
  #icon1,
  #icon2,
  #icon3,
  #icon4,
  #icon5,
  #icon6,
  #icon7 {
    font-size: 2.5rem;
  }
}
@media (max-width: 600px) {
  .game-card {
    width: 220px;
    height: 220px;
  }
  .first {
    margin-top: 0.5rem;
  }
  .second {
    margin-top: 10rem;
    margin-left: -5rem;
    margin-bottom: 1rem;
  }
  #icon0,
  #icon1,
  #icon2,
  #icon3,
  #icon4,
  #icon5,
  #icon6,
  #icon7 {
    font-size: 2rem;
  }
}
